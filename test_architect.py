from time import sleep

'''
Блок схема:
1. Убедиться что окно открыто на поле логин.
 1.1 Провести инициализацию
     В нее входит - запись параметров окна; после входа на локацию - нажатие горячих клавиш и прочие настройки
2. Загрузить сохраненный файл персонажа, если он есть
если нет - создать новый.
3. В зависимости от прогресса перса, запустить нужную функцию.
4. По завершении работы функции (она вернет новое состояние перса) проверить уровень.
5. Записать в файл сохранения состояние.
6. GOTO 3

На каждом из этапов надо проверять состояние игры

Разработка основных функций:
Каждая функция будет отражать один диалог, передвижение, использование предмета на чем-то и тд - любое действие, после которого меняется прогресс по квесту

Обработка ошибок:
1. Если встречается ошибка, программа останавливается с помощью input в консоль выводится сообщение об ошибке
Пользователь может устранить ее и нажать ENTER.
Программа переключает активное окно.
Программа повторяет блок, в котором была ошибка.
2. Если встречается критическая ошибка, сделать скриншот экрана и записать в лог сообщение об ошибке
3. Добавить команду пропустить действие

Надо сделать:

- !!! сделать функцию обработки случайных встреч на глобале

- Если не сработает поиск по картинке на глобале, нужно придумать как еще можно ориентироваться
(возможно стоит двигать камеру в какой-то угол)

- Попробовать написать функцию нахождения себя на экране
 - Сделать детектор курсора

- Написать детектор движения перса

- Постоянно нужна проверка на наличие окна, на режим боя

- Сделать механизм сохранения и загрузки персонажа

- Попробовать реализовать драку с крысами на нуболоке

'''


class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __str__(self):
        return f'{self.x}-{self.y}'


class Window:

    def __init__(self, x, y):
        self.top_left = Point(x - 123, y - 123)
        self.top_right = Point(x + 123, y - 123)
        self.bot_left = Point(x - 123, y + 123)
        self.bot_right = Point(x + 123, y + 123)

    def __str__(self):
        return f'Top left corner: {self.top_left}\nTop right corner: {self.top_right}\nBottom left corner: {self.bot_left}\nBottom right corner: {self.bot_right}'


def check_window():
    return True


def interruption(msg):
    return input(msg + '\nНажмите ENTER чтобы продолжить, введите "q" для выхода\n')


while True:
    if check_window():
        w = Window(1000, 200)
        print(w)
        print(w.bot_right)
    else:
        response = interruption('Не найдено окно игры')
        if response == 'q':
            break






